/* Generated By:JavaCC: Do not edit this line. PUMLParserConstants.java */
package org.netbeans.modules.plantumlnb.pumllexer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PUMLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 2;
  /** RegularExpression Id. */
  int MESSAGE = 3;
  /** RegularExpression Id. */
  int START_UML = 4;
  /** RegularExpression Id. */
  int END_UML = 5;
  /** RegularExpression Id. */
  int AS = 6;
  /** RegularExpression Id. */
  int ALSO = 7;
  /** RegularExpression Id. */
  int AUTO_NUMBER = 8;
  /** RegularExpression Id. */
  int TITLE = 9;
  /** RegularExpression Id. */
  int NEW_PAGE = 10;
  /** RegularExpression Id. */
  int BOX = 11;
  /** RegularExpression Id. */
  int ALT = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int OPT = 14;
  /** RegularExpression Id. */
  int LOOP = 15;
  /** RegularExpression Id. */
  int PAR = 16;
  /** RegularExpression Id. */
  int BREAK = 17;
  /** RegularExpression Id. */
  int CRITICAL = 18;
  /** RegularExpression Id. */
  int NOTE_LEFT = 19;
  /** RegularExpression Id. */
  int NOTE_LEFT_ON_LINK = 20;
  /** RegularExpression Id. */
  int NOTE_RIGHT = 21;
  /** RegularExpression Id. */
  int NOTE_RIGHT_ON_LINK = 22;
  /** RegularExpression Id. */
  int NOTE_TOP = 23;
  /** RegularExpression Id. */
  int NOTE_TOP_ON_LINK = 24;
  /** RegularExpression Id. */
  int NOTE_BOTTOM = 25;
  /** RegularExpression Id. */
  int NOTE_BOTTOM_ON_LINK = 26;
  /** RegularExpression Id. */
  int NOTE_OVER = 27;
  /** RegularExpression Id. */
  int NOTE_ON_LINK = 28;
  /** RegularExpression Id. */
  int END_NOTE = 29;
  /** RegularExpression Id. */
  int REF_OVER = 30;
  /** RegularExpression Id. */
  int DELAY = 31;
  /** RegularExpression Id. */
  int GROUP = 32;
  /** RegularExpression Id. */
  int LEFT = 33;
  /** RegularExpression Id. */
  int RIGHT = 34;
  /** RegularExpression Id. */
  int OF = 35;
  /** RegularExpression Id. */
  int ON = 36;
  /** RegularExpression Id. */
  int LINK = 37;
  /** RegularExpression Id. */
  int OVER = 38;
  /** RegularExpression Id. */
  int END = 39;
  /** RegularExpression Id. */
  int ACTIVATE = 40;
  /** RegularExpression Id. */
  int DEACTIVATE = 41;
  /** RegularExpression Id. */
  int DESTROY = 42;
  /** RegularExpression Id. */
  int CREATE = 43;
  /** RegularExpression Id. */
  int FOOTBOX = 44;
  /** RegularExpression Id. */
  int SKIN_PARAM = 45;
  /** RegularExpression Id. */
  int SKIN = 46;
  /** RegularExpression Id. */
  int TOP = 47;
  /** RegularExpression Id. */
  int BOTTOM = 48;
  /** RegularExpression Id. */
  int TOP_TO_BOTTOM_DIRECTION = 49;
  /** RegularExpression Id. */
  int PACKAGE = 50;
  /** RegularExpression Id. */
  int NAMESPACE = 51;
  /** RegularExpression Id. */
  int PAGE = 52;
  /** RegularExpression Id. */
  int UP = 53;
  /** RegularExpression Id. */
  int DOWN = 54;
  /** RegularExpression Id. */
  int IF = 55;
  /** RegularExpression Id. */
  int ENDIF = 56;
  /** RegularExpression Id. */
  int PARTITION = 57;
  /** RegularExpression Id. */
  int FOOTER = 58;
  /** RegularExpression Id. */
  int HEADER = 59;
  /** RegularExpression Id. */
  int CENTER = 60;
  /** RegularExpression Id. */
  int ROTATE = 61;
  /** RegularExpression Id. */
  int REF = 62;
  /** RegularExpression Id. */
  int RETURN = 63;
  /** RegularExpression Id. */
  int IS = 64;
  /** RegularExpression Id. */
  int REPEAT = 65;
  /** RegularExpression Id. */
  int START = 66;
  /** RegularExpression Id. */
  int STOP = 67;
  /** RegularExpression Id. */
  int WHILE = 68;
  /** RegularExpression Id. */
  int ENDWHILE = 69;
  /** RegularExpression Id. */
  int FORK = 70;
  /** RegularExpression Id. */
  int AGAIN = 71;
  /** RegularExpression Id. */
  int FORWARD_CALL_MESSAGE = 72;
  /** RegularExpression Id. */
  int FORWARD_CALL_DOTTED_MESSAGE = 73;
  /** RegularExpression Id. */
  int REVERSE_CALL_MESSAGE = 74;
  /** RegularExpression Id. */
  int REVERSE_CALL_DOTTED_MESSAGE = 75;
  /** RegularExpression Id. */
  int FORWARD_ASYNCHRONOUS_CALL_MESSAGE = 76;
  /** RegularExpression Id. */
  int REVERSE_ASYNCHRONOUS_CALL_MESSAGE = 77;
  /** RegularExpression Id. */
  int DOTS_DASHES = 78;
  /** RegularExpression Id. */
  int LEFT_AGGREGATION = 79;
  /** RegularExpression Id. */
  int LEFT_EXTENSION = 80;
  /** RegularExpression Id. */
  int LEFT_COMPOSITION = 81;
  /** RegularExpression Id. */
  int RIGHT_AGGREGATION = 82;
  /** RegularExpression Id. */
  int RIGHT_EXTENSION = 83;
  /** RegularExpression Id. */
  int RIGHT_COMPOSITION = 84;
  /** RegularExpression Id. */
  int ACTOR = 85;
  /** RegularExpression Id. */
  int PARTICIPANT = 86;
  /** RegularExpression Id. */
  int USECASE = 87;
  /** RegularExpression Id. */
  int CLASS = 88;
  /** RegularExpression Id. */
  int INTERFACE = 89;
  /** RegularExpression Id. */
  int ABSTRACT = 90;
  /** RegularExpression Id. */
  int ANNOTATION = 91;
  /** RegularExpression Id. */
  int ENUM = 92;
  /** RegularExpression Id. */
  int COMPONENT = 93;
  /** RegularExpression Id. */
  int STATE = 94;
  /** RegularExpression Id. */
  int OBJECT = 95;
  /** RegularExpression Id. */
  int ARTIFACT = 96;
  /** RegularExpression Id. */
  int FOLDER = 97;
  /** RegularExpression Id. */
  int RECT = 98;
  /** RegularExpression Id. */
  int NODE = 99;
  /** RegularExpression Id. */
  int FRAME = 100;
  /** RegularExpression Id. */
  int CLOUD = 101;
  /** RegularExpression Id. */
  int DATABASE = 102;
  /** RegularExpression Id. */
  int STORAGE = 103;
  /** RegularExpression Id. */
  int AGENT = 104;
  /** RegularExpression Id. */
  int BOUNDARY = 105;
  /** RegularExpression Id. */
  int CONTROL = 106;
  /** RegularExpression Id. */
  int ENTITY = 107;
  /** RegularExpression Id. */
  int SHOW = 108;
  /** RegularExpression Id. */
  int HIDE = 109;
  /** RegularExpression Id. */
  int SHOW_EMPTY_MEMBERS = 110;
  /** RegularExpression Id. */
  int HIDE_EMPTY_MEMBERS = 111;
  /** RegularExpression Id. */
  int EMPTY_MEMBERS = 112;
  /** RegularExpression Id. */
  int IDENTIFIER = 113;
  /** RegularExpression Id. */
  int LETTER = 114;
  /** RegularExpression Id. */
  int PART_LETTER = 115;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<SINGLE_LINE_COMMENT>",
    "<MESSAGE>",
    "\"@startuml\"",
    "\"@enduml\"",
    "\"as\"",
    "\"also\"",
    "\"autonumber\"",
    "\"title\"",
    "\"newpage\"",
    "\"box\"",
    "\"alt\"",
    "\"else\"",
    "\"opt\"",
    "\"loop\"",
    "\"par\"",
    "\"break\"",
    "\"critical\"",
    "<NOTE_LEFT>",
    "\"note left on link\"",
    "<NOTE_RIGHT>",
    "\"note right on link\"",
    "<NOTE_TOP>",
    "\"note top on link\"",
    "<NOTE_BOTTOM>",
    "\"note bottom on link\"",
    "\"note over\"",
    "\"note on\"",
    "\"end note\"",
    "\"ref over\"",
    "\"...\"",
    "\"group\"",
    "\"left\"",
    "\"right\"",
    "\"of\"",
    "\"on\"",
    "\"link\"",
    "\"over\"",
    "\"end\"",
    "\"activate\"",
    "\"deactivate\"",
    "\"destroy\"",
    "\"create\"",
    "\"footbox\"",
    "\"skinparam\"",
    "\"skin\"",
    "\"top\"",
    "\"bottom\"",
    "\"top to bottom direction\"",
    "\"package\"",
    "\"namespace\"",
    "\"page\"",
    "\"up\"",
    "\"down\"",
    "\"if\"",
    "\"endif\"",
    "\"partition\"",
    "\"footer\"",
    "\"header\"",
    "\"center\"",
    "\"rotate\"",
    "\"ref\"",
    "\"return\"",
    "\"is\"",
    "\"repeat\"",
    "\"start\"",
    "\"stop\"",
    "\"while\"",
    "\"endwhile\"",
    "\"fork\"",
    "\"again\"",
    "\"->\"",
    "\"-->\"",
    "\"<-\"",
    "\"<--\"",
    "\"->>\"",
    "\"<<-\"",
    "<DOTS_DASHES>",
    "<LEFT_AGGREGATION>",
    "<LEFT_EXTENSION>",
    "<LEFT_COMPOSITION>",
    "<RIGHT_AGGREGATION>",
    "<RIGHT_EXTENSION>",
    "<RIGHT_COMPOSITION>",
    "\"actor\"",
    "\"participant\"",
    "\"usecase\"",
    "\"class\"",
    "\"interface\"",
    "\"abstract\"",
    "\"annotation\"",
    "\"enum\"",
    "\"component\"",
    "\"state\"",
    "\"object\"",
    "\"artifact\"",
    "\"folder\"",
    "\"rect\"",
    "\"node\"",
    "\"frame\"",
    "\"cloud\"",
    "\"database\"",
    "\"storage\"",
    "\"agent\"",
    "\"boundary\"",
    "\"control\"",
    "\"entity\"",
    "\"show\"",
    "\"hide\"",
    "<SHOW_EMPTY_MEMBERS>",
    "<HIDE_EMPTY_MEMBERS>",
    "\"empty members\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "<token of kind 116>",
  };

}
