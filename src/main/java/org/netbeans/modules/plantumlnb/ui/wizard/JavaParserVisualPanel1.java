/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.modules.plantumlnb.ui.wizard;

import javax.swing.JPanel;
import javax.swing.JTextField;
import static org.openide.util.NbBundle.getMessage;

public final class JavaParserVisualPanel1 extends JPanel {

    /**
     * Creates new form JavaParserVisualPanel1
     */
    public JavaParserVisualPanel1() {
        initComponents();
        
        // Future panel
        panelUML.setVisible(false);
    }

    @Override
    public String getName() {
        return getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.step1.text");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scrollPanePanel1 = new javax.swing.JScrollPane();
        panelNorth = new javax.swing.JPanel();
        panelPrj = new javax.swing.JPanel();
        labelPrjName = new javax.swing.JLabel();
        textFieldPrjName = new javax.swing.JTextField();
        separator1 = new javax.swing.JSeparator();
        textFieldPrjSrc = new javax.swing.JTextField();
        labelPrjSrc = new javax.swing.JLabel();
        panelUML = new javax.swing.JPanel();
        labelPackages = new javax.swing.JLabel();
        checkBoxPublic = new javax.swing.JCheckBox();
        checkBoxPrivate = new javax.swing.JCheckBox();
        labelClasses = new javax.swing.JLabel();
        checkBoxStatic = new javax.swing.JCheckBox();
        checkBoxImplements = new javax.swing.JCheckBox();
        labelFields = new javax.swing.JLabel();
        checkBoxExtends = new javax.swing.JCheckBox();
        checkBoxImport = new javax.swing.JCheckBox();
        checkBoxPackage = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        scrollPanePanel1.setBorder(null);

        panelNorth.setLayout(new java.awt.GridBagLayout());

        panelPrj.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(labelPrjName, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.labelPrjName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPrj.add(labelPrjName, gridBagConstraints);

        textFieldPrjName.setEditable(false);
        textFieldPrjName.setText(org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.textFieldPrjName.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPrj.add(textFieldPrjName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPrj.add(separator1, gridBagConstraints);

        textFieldPrjSrc.setEditable(false);
        textFieldPrjSrc.setText(org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.textFieldPrjSrc.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPrj.add(textFieldPrjSrc, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(labelPrjSrc, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.labelPrjSrc.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelPrj.add(labelPrjSrc, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelNorth.add(panelPrj, gridBagConstraints);

        panelUML.setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(labelPackages, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.labelPackages.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(labelPackages, gridBagConstraints);

        checkBoxPublic.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxPublic, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxPublic.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxPublic, gridBagConstraints);

        checkBoxPrivate.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxPrivate, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxPrivate.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxPrivate, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(labelClasses, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.labelClasses.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(labelClasses, gridBagConstraints);

        checkBoxStatic.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxStatic, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxStatic.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxStatic, gridBagConstraints);

        checkBoxImplements.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxImplements, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxImplements.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxImplements, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(labelFields, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.labelFields.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(labelFields, gridBagConstraints);

        checkBoxExtends.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxExtends, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxExtends.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxExtends, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(checkBoxImport, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxImport.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxImport, gridBagConstraints);

        checkBoxPackage.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(checkBoxPackage, org.openide.util.NbBundle.getMessage(JavaParserVisualPanel1.class, "JavaParserVisualPanel1.checkBoxPackage.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelUML.add(checkBoxPackage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panelNorth.add(panelUML, gridBagConstraints);

        scrollPanePanel1.setViewportView(panelNorth);

        add(scrollPanePanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    public boolean isExtends() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isImplements() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isImport() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isPrivate() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isPublic() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isStatic() {
        return checkBoxExtends.isSelected();
    }
    
    public boolean isPackage() {
        return checkBoxPackage.isSelected();
    }
    
    public JTextField getPrjName() { 
        return textFieldPrjName;
    }
    
    public JTextField getPrjSrc() { 
        return textFieldPrjSrc;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBoxExtends;
    private javax.swing.JCheckBox checkBoxImplements;
    private javax.swing.JCheckBox checkBoxImport;
    private javax.swing.JCheckBox checkBoxPackage;
    private javax.swing.JCheckBox checkBoxPrivate;
    private javax.swing.JCheckBox checkBoxPublic;
    private javax.swing.JCheckBox checkBoxStatic;
    private javax.swing.JLabel labelClasses;
    private javax.swing.JLabel labelFields;
    private javax.swing.JLabel labelPackages;
    private javax.swing.JLabel labelPrjName;
    private javax.swing.JLabel labelPrjSrc;
    private javax.swing.JPanel panelNorth;
    private javax.swing.JPanel panelPrj;
    private javax.swing.JPanel panelUML;
    private javax.swing.JScrollPane scrollPanePanel1;
    private javax.swing.JSeparator separator1;
    private javax.swing.JTextField textFieldPrjName;
    private javax.swing.JTextField textFieldPrjSrc;
    // End of variables declaration//GEN-END:variables
}
