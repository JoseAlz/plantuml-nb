/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.modules.plantumlnb.ui.wizard;

import javax.swing.JPanel;

public final class PlantUMLVisualPanel3 extends JPanel {

    /**
     * Creates new form PlantUMLVisualPanel3
     */
    public PlantUMLVisualPanel3() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Choose display type options";
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abstractClassesCheckBox = new javax.swing.JCheckBox();
        annotationsCheckBox = new javax.swing.JCheckBox();
        enumsCheckBox = new javax.swing.JCheckBox();
        classesCheckBox = new javax.swing.JCheckBox();
        importsCheckBox = new javax.swing.JCheckBox();
        interfacesCheckBox = new javax.swing.JCheckBox();
        implementationsCheckBox = new javax.swing.JCheckBox();
        extensionsCheckBox = new javax.swing.JCheckBox();
        staticImportsCheckBox = new javax.swing.JCheckBox();
        nativeMethodsCheckBox = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(abstractClassesCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.abstractClassesCheckBox.text")); // NOI18N
        abstractClassesCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.abstractClassesCheckBox.toolTipText")); // NOI18N
        abstractClassesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abstractClassesCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(annotationsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.annotationsCheckBox.text")); // NOI18N
        annotationsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.annotationsCheckBox.toolTipText")); // NOI18N
        annotationsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annotationsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(enumsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.enumsCheckBox.text")); // NOI18N
        enumsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.enumsCheckBox.toolTipText")); // NOI18N
        enumsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enumsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(classesCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.classesCheckBox.text")); // NOI18N
        classesCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.classesCheckBox.toolTipText")); // NOI18N
        classesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(importsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.importsCheckBox.text")); // NOI18N
        importsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.importsCheckBox.toolTipText")); // NOI18N
        importsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(interfacesCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.interfacesCheckBox.text")); // NOI18N
        interfacesCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.interfacesCheckBox.toolTipText")); // NOI18N
        interfacesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interfacesCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(implementationsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.implementationsCheckBox.text")); // NOI18N
        implementationsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.implementationsCheckBox.toolTipText")); // NOI18N
        implementationsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                implementationsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(extensionsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.extensionsCheckBox.text")); // NOI18N
        extensionsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.extensionsCheckBox.toolTipText")); // NOI18N
        extensionsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extensionsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(staticImportsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.staticImportsCheckBox.text")); // NOI18N
        staticImportsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.staticImportsCheckBox.toolTipText")); // NOI18N
        staticImportsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staticImportsCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(nativeMethodsCheckBox, org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.nativeMethodsCheckBox.text")); // NOI18N
        nativeMethodsCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(PlantUMLVisualPanel3.class, "PlantUMLVisualPanel3.nativeMethodsCheckBox.toolTipText")); // NOI18N
        nativeMethodsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nativeMethodsCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classesCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(abstractClassesCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                    .addComponent(annotationsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enumsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(extensionsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(implementationsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(importsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(interfacesCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nativeMethodsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(staticImportsCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(abstractClassesCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(annotationsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(classesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(enumsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(extensionsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(implementationsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(importsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(interfacesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nativeMethodsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(staticImportsCheckBox)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {abstractClassesCheckBox, annotationsCheckBox, classesCheckBox, enumsCheckBox, extensionsCheckBox, implementationsCheckBox, importsCheckBox, interfacesCheckBox, nativeMethodsCheckBox, staticImportsCheckBox});

    }// </editor-fold>//GEN-END:initComponents

    private void abstractClassesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abstractClassesCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_abstractClassesCheckBoxActionPerformed

    private void annotationsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annotationsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_annotationsCheckBoxActionPerformed

    private void enumsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enumsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enumsCheckBoxActionPerformed

    private void classesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classesCheckBoxActionPerformed

    private void importsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importsCheckBoxActionPerformed

    private void interfacesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interfacesCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interfacesCheckBoxActionPerformed

    private void implementationsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_implementationsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_implementationsCheckBoxActionPerformed

    private void extensionsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extensionsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extensionsCheckBoxActionPerformed

    private void staticImportsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staticImportsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staticImportsCheckBoxActionPerformed

    private void nativeMethodsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nativeMethodsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nativeMethodsCheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox abstractClassesCheckBox;
    private javax.swing.JCheckBox annotationsCheckBox;
    private javax.swing.JCheckBox classesCheckBox;
    private javax.swing.JCheckBox enumsCheckBox;
    private javax.swing.JCheckBox extensionsCheckBox;
    private javax.swing.JCheckBox implementationsCheckBox;
    private javax.swing.JCheckBox importsCheckBox;
    private javax.swing.JCheckBox interfacesCheckBox;
    private javax.swing.JCheckBox nativeMethodsCheckBox;
    private javax.swing.JCheckBox staticImportsCheckBox;
    // End of variables declaration//GEN-END:variables
}
